#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass qjrms4
\begin_preamble
\newcommand{\nicefrac}[2]{\ensuremath ^{#1}\!\!/\!_{#2}}
\usepackage { fancybox}
\usepackage[export]{adjustbox}

\usepackage{todonotes}
\usepackage{afterpage}

\usepackage[switch]{lineno}
\linenumbers

\usepackage[colorlinks,bookmarksopen,bookmarksnumbered,citecolor=red,urlcolor=red]{hyperref}

\newcommand\BibTeX{{\rmfamily B\kern-.05em \textsc{i\kern-.025em b}\kern-.08em
T\kern-.1667em\lower.7ex\hbox{E}\kern-.125emX}}

%\usepackage{moreverb}
\end_preamble
\options times
\use_default_options false
\maintain_unincluded_children false
\language british
\language_package none
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format pdf5
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 2
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine natbib
\cite_engine_type authoryear
\biblio_style 
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification false
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\paperwidth 15cm
\paperheight 12cm
\leftmargin 2.5cm
\topmargin 2.5cm
\rightmargin 2.5cm
\bottommargin 2.5cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
title{Numerical Solution of the Conditionally Averaged Equations for Representin
g Net Mass Flux due to Convection}
\end_layout

\begin_layout Plain Layout


\backslash
author{Hilary Weller,
\backslash
affil{a}
\backslash
corrauth
\backslash
 William McIntyre
\backslash
affil{a}}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
runningheads{H.
 Weller and W.
 McIntyre}{Conditional Averaging for Convection}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
address{
\end_layout

\begin_layout Plain Layout


\backslash
affilnum{a}Meteorology, University of Reading}
\end_layout

\begin_layout Plain Layout


\backslash
corraddr{E-mail: <h.weller@reading.ac.uk>}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
begin{abstract}
\backslash
normalfont
\end_layout

\begin_layout Plain Layout

hmm
\end_layout

\begin_layout Plain Layout


\backslash
end{abstract}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
keywords{
\end_layout

\begin_layout Plain Layout

Convection
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout


\backslash
maketitle
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
tableofcontents
\end_layout

\begin_layout Plain Layout


\backslash
listoftodos
\end_layout

\begin_layout Plain Layout


\backslash
onecolumn
\end_layout

\end_inset


\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Section
The Conditionally Averaged Euler Equations
\end_layout

\begin_layout Standard
Traditional mass flux convection schemes solve simplified equations of motion
 for buoyant plumes with different temperature, vertical velocity and moisture
 properties inside the plume in comparison to the environment.
 This is therefore a form of conditional averaging.
 However we can take the process further and avoid some of the crude assumptions
 made by mass flux schemes.
 The conditional averageing (or filtering) process for convection was described
 by 
\begin_inset CommandInset citation
LatexCommand citet
key "TWW+1x"

\end_inset

 and involves multiplying each equation of motion by an indicator function,
 
\begin_inset Formula $I_{i}$
\end_inset

, for a number of different conditions labelled by 
\begin_inset Formula $i$
\end_inset

.
 
\begin_inset Formula $I_{i}$
\end_inset

 is one if the condition is true at that location and zero otherwise.
 A filter (typically volume average) is then applied and averages for each
 condition can be found over each filter region.
 The volume fraction in partition 
\begin_inset Formula $i$
\end_inset

 is defined to be
\begin_inset Formula 
\begin{equation}
\sigma_{i}=\bar{I_{i}}
\end{equation}

\end_inset

where the overbar implies the application of the filter (or volume average).
 Density, potential temperature and velocity can then be defined for each
 condition:
\begin_inset Formula 
\begin{eqnarray*}
\rho_{i} & = & \overline{I_{i}\rho}\\
\theta_{i} & = & \overline{I_{i}\theta_{i}}\\
\mathbf{u}_{i} & = & \overline{I_{i}\mathbf{u}}
\end{eqnarray*}

\end_inset

and averages can be found over all partitions, using the overbar in a slightly
 different way:
\begin_inset Formula 
\begin{eqnarray*}
1 & = & \sum_{i}\sigma_{i}\\
\overline{\rho} & = & \sum_{i}\sigma_{i}\rho_{i}\\
\overline{\theta} & = & \frac{1}{\overline{\rho}}\sum_{i}\sigma_{i}\rho_{i}\theta_{i}\\
\overline{\mathbf{u}_{i}} & = & \frac{1}{\overline{\rho}}\sum_{i}\sigma_{i}\rho_{i}\mathbf{u}_{i}.
\end{eqnarray*}

\end_inset

The same averaging can be applied to pressure but we will assume that pressure
 is uniform across partitions.
 The time-scale for equilibration of pressure across partitions will be
 related to the speed of sound so uniform pressure across partitions is
 probably a good approximation and also makes numerical solution practical.
 This is also the approximation made when using conditional averaging for
 representing multi-phase flows 
\begin_inset CommandInset citation
LatexCommand citep
before "eg."
key "GBB+07"

\end_inset

.
 Applying this averaging to the rotating compressible Euler equations and
 assuming uniform pressure between partitions leads to the conditionally
 averaged Euler equations in advective form:
\begin_inset Formula 
\begin{eqnarray}
\frac{\partial\mathbf{u}_{i}}{\partial t}+\mathbf{u}_{i}\cdot\nabla\mathbf{u}_{i} & = & -2\boldsymbol{\Omega}\times\mathbf{u}_{i}-c_{p}\theta_{i}\nabla\pi+\mathbf{g}\label{eq:condMomAdv}\\
 & + & \sum_{j\ne i}\left(\frac{\sigma_{j}\rho_{j}}{\sigma_{i}\rho_{i}}S_{ji}(\mathbf{u}_{j}-\mathbf{u}_{i})-\mathbf{D}_{ij}\right)\\
\frac{\partial\sigma_{i}\rho_{i}}{\partial t}+\nabla\cdot(\sigma_{i}\rho_{i}\mathbf{u}_{i}) & = & \sum_{j\ne i}\left(\sigma_{j}\rho_{j}S_{ji}-\sigma_{i}\rho_{i}S_{ij}\right)\label{eq:condCont-1}\\
\frac{\partial\theta_{i}}{\partial t}+\mathbf{u}_{i}\cdot\nabla\theta_{i} & = & \sum_{j\ne i}\left(\frac{\sigma_{j}\rho_{j}}{\sigma_{i}\rho_{i}}S_{ji}(\theta_{j}-\theta_{i})-H_{ij}\right)\label{eq:condThetaAdv}
\end{eqnarray}

\end_inset

where 
\begin_inset Formula $\pi=(p/p_{0})^{\kappa}$
\end_inset

 is the Exner pressure, 
\begin_inset Formula $p$
\end_inset

 is the pressure, 
\begin_inset Formula $p_{0}$
\end_inset

 is a reference pressure, 
\begin_inset Formula $\kappa=R/c_{p}$
\end_inset

, 
\begin_inset Formula $R$
\end_inset

 is the gas constant of dry air, 
\begin_inset Formula $c_{p}$
\end_inset

 is the heat capacity of dry air at constant pressure, 
\begin_inset Formula $\theta=T/\pi$
\end_inset

 is the potential temperature, 
\begin_inset Formula $\boldsymbol{\Omega}$
\end_inset

 is the rotation rate of the domain, 
\begin_inset Formula $\mathbf{g}$
\end_inset

 is the acceleration due to gravity, 
\begin_inset Formula $\sigma_{i}\rho_{i}S_{ij}$
\end_inset

 is the transfer rate of mass from partition 
\begin_inset Formula $i$
\end_inset

 to partition 
\begin_inset Formula $j$
\end_inset

, 
\begin_inset Formula $\mathbf{D}_{ij}$
\end_inset

 is the drag exerted from partition 
\begin_inset Formula $i$
\end_inset

 onto partition 
\begin_inset Formula $j$
\end_inset

 and 
\begin_inset Formula $H_{ij}$
\end_inset

 is the heat transfer from partitions 
\begin_inset Formula $i$
\end_inset

 to 
\begin_inset Formula $j$
\end_inset

.
 When mass is transferred, it takes its properties with it which is why
 
\begin_inset Formula $S_{ij}$
\end_inset

 appears in all equations.
 We then also assume the equation of state for dry air both globally and
 for each partition:
\begin_inset Formula 
\begin{equation}
p_{0}\pi^{\frac{1-\kappa}{\kappa}}=R\rho_{i}\theta_{i}=R\rho\theta=R\sum_{i}\sigma_{i}\rho_{i}\theta_{i}.\label{eq:condState}
\end{equation}

\end_inset


\end_layout

\begin_layout Subsection
Transfers and Exchanges between Partitions
\end_layout

\begin_layout Standard
These conditionally averaged equations can only become useful for representing
 sub-grid scale convection when transfer terms 
\begin_inset Formula $S_{ij}$
\end_inset

, 
\begin_inset Formula $\mathbf{D}_{ij}$
\end_inset

 and 
\begin_inset Formula $H_{ij}$
\end_inset

 are formulated.
 
\begin_inset Formula $S_{ij}$
\end_inset

 is particularly important for moving mass in and out of the partition associate
d with convection and will inevitably be associated with sub-grid scale
 variability of buoyancy and other properties related to convection.
 In this paper we do not propose new closures for how mass moves from the
 stable to the convectively active partition (such as cloud base mass flux
 closures).
 Instead we will use transfer terms formulated in terms of differential
 operators that transfer resolved flow into the convectively active partition
 and back again.
 The purpose of this is to test the stability, boundedness and conservation
 properties of the numerical methods rather than proposing a useful parameterisa
tion of convection.
 Throughout we assume 
\begin_inset Formula $H_{ij}=0$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Note Greyedout
status open

\begin_layout Plain Layout
In this paper we are not seeking to define convection or formulate useful
 transfer terms for convection parameterisation using conditional averaging.
 Rather we are using plausible transfer terms and developing numerical methods
 that are stable, bounded and maintain some conservation properties.
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Diffusion of 
\begin_inset Formula $\sigma$
\end_inset


\begin_inset CommandInset label
LatexCommand label
name "sub:diffuseSigma"

\end_inset


\end_layout

\begin_layout Standard
Firstly, a diffusive mass transfer term is created to smooth out steep changes
 in 
\begin_inset Formula $\sigma_{i}$
\end_inset

.
 This term can control numerical oscillations but also plays a similar role
 to convective entrainment which mixes convectively active and stable air.
 The form used ensures that total mass is not diffused and that the transfer
 from 
\begin_inset Formula $i$
\end_inset

 to 
\begin_inset Formula $j$
\end_inset

 is always positive:
\begin_inset Formula 
\begin{equation}
\sigma_{i}\rho_{i}S_{ij}=\frac{K_{\sigma}}{2}\max\left(\nabla^{2}\left(\sigma_{j}\rho_{j}-\sigma_{i}\rho_{i}\right),\ 0\right)\label{eq:diffusionTransfer}
\end{equation}

\end_inset

where 
\begin_inset Formula $K_{\sigma}$
\end_inset

 is a diffusion coefficient which can be chosen so to obey stability constraints
 if the mass transfer term is treated explicitly in equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:condCont-1"

\end_inset

).
 
\end_layout

\begin_layout Subsubsection
Transfers based on Divergence
\begin_inset CommandInset label
LatexCommand label
name "sub:divTransfer"

\end_inset


\end_layout

\begin_layout Standard
In the fully compressible Euler equations, divergence is tightly controlled
 by pressure gradients and in low Mach number flows such as atmospheric
 dynamics, divergence is small.
 However in the partitioned equations without drag or transfers between
 partitions, there is nothing to control the divergence in each partition
 because there is only one pressure gradient that acts on all partitions.
 We will see in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:results"

\end_inset

 that partition divergence can grow leading to large velocities and model
 instability.
 One mechanism to control the partition divergence would be to transfer
 converging fluid to the other partition and vice-verca.
 The transfer terms need to be found so that, in the absence of mean divergence,
 no new extrema in 
\begin_inset Formula $\sigma_{i}\rho_{i}$
\end_inset

 are generated.
 This can be achieved by setting:
\begin_inset Formula 
\begin{eqnarray}
\sigma_{i}\rho_{i}S_{ij} & = & \frac{1}{2}\max\left(\sigma_{j}\rho_{j}\nabla\cdot\mathbf{u}_{j}-\sigma_{i}\rho_{i}\nabla\cdot\mathbf{u}_{i},\ 0\right).
\end{eqnarray}

\end_inset

This formulation means that 
\begin_inset Formula $\sigma_{i}\rho_{i}$
\end_inset

 is still advected by 
\begin_inset Formula $\mathbf{u}_{i}$
\end_inset

 and is also changed by global divergence but not by local divergence.
 This is equivalent to the transport equation for 
\begin_inset Formula $\sigma_{i}\rho_{i}$
\end_inset

 being
\begin_inset Formula 
\begin{eqnarray}
\frac{\partial\sigma_{i}\rho_{i}}{\partial t}+\nabla(\sigma_{i}\rho_{i}\mathbf{u}_{i}) & = & \frac{1}{2}\left(\sigma_{i}\rho_{i}\nabla\cdot\mathbf{u}_{i}-\sigma_{j}\rho_{j}\nabla\cdot\mathbf{u}_{j}\right)\\
\implies\frac{\partial\sigma_{i}\rho_{i}}{\partial t}+\mathbf{u}_{i}\cdot\nabla(\sigma_{i}\rho_{i}) & = & -\frac{1}{2}\overline{\rho}\nabla\cdot\overline{\mathbf{u}}
\end{eqnarray}

\end_inset

where 
\begin_inset Formula $\overline{\rho}\nabla\cdot\overline{\mathbf{u}}=\sum_{i}\sigma_{i}\rho_{i}\nabla\cdot\mathbf{u}_{i}$
\end_inset

, satisfying the criteria that, in the absence of global divergence, advection
 of 
\begin_inset Formula $\sigma_{i}\rho_{i}$
\end_inset

 is bounded.
 This transfer term is formulated to stabilise the equations rather than
 to represent buoyant convection.
\end_layout

\begin_layout Subsubsection
Transfers based on buoyancy perturbations
\begin_inset CommandInset label
LatexCommand label
name "sub:buoyancyTransfer"

\end_inset


\end_layout

\begin_layout Standard
Air will rise if buoyancy perturbations make it lighter than the air above
 or lighter than the surroundings.
 We want to formulate transfer terms as part of PDEs rather than introducing
 criteria comparing the buoyancy of grid boxes with surrounding grid boxes.
 Therefore we use the Laplacian of 
\begin_inset Formula $\theta$
\end_inset

 to inform us of positive and negative perturbations.
 There will be a positive perturbation if 
\begin_inset Formula $\nabla^{2}\theta<0$
\end_inset

 and vice versa.
 These transfer terms can be added to the transfer terms associated with
 diffusion between the partitions (eqn (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:diffusionTransfer"

\end_inset

)):
\begin_inset Formula 
\begin{eqnarray}
S_{01} & = & \begin{cases}
-K_{\theta}\frac{\nabla^{2}\theta_{0}}{\theta_{0}} & \ \text{when}\ \nabla^{2}\theta_{0}<0\\
0 & \ \text{otherwise}
\end{cases}\label{eq:thetaTransfer01}\\
S_{10} & = & \begin{cases}
K_{\theta}\frac{\nabla^{2}\theta_{1}}{\theta_{1}} & \ \text{when}\ \nabla^{2}\theta_{1}>0\\
0 & \ \text{otherwise}
\end{cases}\label{eq:thetaTransfer10}
\end{eqnarray}

\end_inset

where 
\begin_inset Formula $K_{\theta}$
\end_inset

 is a diffusivity.
\end_layout

\begin_layout Subsubsection
Transfers Based on Horizontal Divergence and Vertical Velocity
\begin_inset CommandInset label
LatexCommand label
name "sub:hdiv_w_Transfer"

\end_inset


\end_layout

\begin_layout Standard
We also test a transfer term that moves fluid from partitions zero to one
 when partition zero is converging in the horizontal and rising and vice
 versa:
\begin_inset Formula 
\begin{eqnarray}
\sigma_{0}\rho_{0}S_{01} & = & \begin{cases}
-\nabla_{h}\cdot(\sigma_{0}\rho_{0}\mathbf{u}_{0}) & \ \text{if}\ \nabla_{h}\cdot(\sigma_{0}\rho_{0}\mathbf{u}_{0})<0\ \text{and}\ \mathbf{u}_{0}\cdot\mathbf{g}<0\\
0 & \ \text{otherwise}
\end{cases}\label{eq:divTransfer01}\\
\sigma_{1}\rho_{1}S_{10} & = & \begin{cases}
\nabla_{h}\cdot(\sigma_{1}\rho_{1}\mathbf{u}_{1}) & \ \text{if}\ \nabla_{h}\cdot(\sigma_{1}\rho_{1}\mathbf{u}_{1})>0\ \text{and}\ \mathbf{u}_{1}\cdot\mathbf{g}>0\\
0 & \ \text{otherwise}
\end{cases}.\label{eq:divTransfer10}
\end{eqnarray}

\end_inset

As with the transfer terms associated with buoyancy, these transfer terms
 can be added to the transfer terms associated with diffusion and then limited
 to preserve boundedness.
\end_layout

\begin_layout Subsubsection
Drag in the Momentum Equation
\begin_inset CommandInset label
LatexCommand label
name "sub:drag"

\end_inset


\end_layout

\begin_layout Standard
The drag between partitions is based on a model for drag on rising bubbles
 described by 
\begin_inset CommandInset citation
LatexCommand citet
key "RLD+11"

\end_inset

.
 Assuming exactly two partitions and remembering that we need 
\begin_inset Formula $\sigma_{i}\rho_{i}D_{ij}=-\sigma_{j}\rho_{j}D_{ji}$
\end_inset

 we can use: 
\begin_inset Formula 
\begin{equation}
\mathbf{D}_{ij}=\frac{\sigma_{j}}{\rho_{i}}\frac{C_{D}\overline{\rho}}{r_{c}}|\mathbf{u}_{i}-\mathbf{u}_{j}|\left(\mathbf{u}_{i}-\mathbf{u}_{j}\right)\label{eq:dragBubble}
\end{equation}

\end_inset

where 
\begin_inset Formula $C_{D}$
\end_inset

 is a drag coefficient and 
\begin_inset Formula $r_{c}$
\end_inset

 is the radius or length scale of a region of fluid (which needs to be the
 same for both partitions).
 As 
\begin_inset Formula $\sigma_{i}$
\end_inset

 becomes small in any partition, we need 
\begin_inset Formula $r_{c}$
\end_inset

 to become small which increases the drag between partitions.
 If we assume a maximum and minimum cloud radius, 
\begin_inset Formula $r_{\max}$
\end_inset

 and 
\begin_inset Formula $r_{\min}$
\end_inset

, then the cloud radius can take the form
\begin_inset Formula 
\begin{equation}
r_{c}=\max\left(r_{\min},\ r_{\max}\prod_{i}\sigma_{i}\right).\label{eq:dragRadius}
\end{equation}

\end_inset


\end_layout

\begin_layout Section
Semi-Implicit Numerical Solution Technique
\end_layout

\begin_layout Standard
The equations are discretised and solved using the OpenFOAM library (
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://openfoam.org
\end_layout

\end_inset

) and the full implementation is part of the AtmosFOAM repository (
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://github.com/AtmosFOAM/
\end_layout

\end_inset

).
 The spatial discretisation uses standard OpenFOAM operators.
 
\end_layout

\begin_layout Subsection
Spatial Discretisation
\end_layout

\begin_layout Standard
The spatial discretisation uses a finite-volume C-grid for an arbitrary
 mesh, similar to that described by 
\begin_inset CommandInset citation
LatexCommand citet
key "WS14"

\end_inset

 with 
\begin_inset Formula $\theta_{i}$
\end_inset

 , 
\begin_inset Formula $\sigma_{i}\rho_{i}$
\end_inset

 and 
\begin_inset Formula $\pi$
\end_inset

 defined as volumetric mean quantities (or at cell centres) and normal component
s of velocity defined on cell faces.
 All the meshes used are orthogonal and the focus of this paper is not spatial
 discretisation therefore for simplicity the discretisation is described
 for orthogonal meshes.
 The spatial discretisation of each of the terms of the conditionally averaged
 Euler equations are described in turn.
\end_layout

\begin_layout Subsubsection
Reconstruction of velocity fields at cell centres and faces from face normals
\end_layout

\begin_layout Standard
The prognostic velocity variable is the volume flux across each face:
\begin_inset Formula 
\begin{equation}
U_{i}=\mathbf{u}_{fi}\cdot\mathbf{S}_{f}
\end{equation}

\end_inset

where 
\begin_inset Formula $\mathbf{u}_{f}$
\end_inset

 is the  velocity at the face and 
\begin_inset Formula $\mathbf{S}_{f}$
\end_inset

 is the face area vector.
 The face velocity is interpolated from the cell centre velocity using linear
 interpolation:
\begin_inset Formula 
\begin{equation}
\mathbf{u}_{fi}=\lambda\mathbf{u}_{ci}+(1-\lambda)\mathbf{u}_{Ni}
\end{equation}

\end_inset

where 
\begin_inset Formula $\mathbf{u}_{ci}$
\end_inset

 is the cell centre velocity of the cell that owns face 
\begin_inset Formula $f$
\end_inset

, 
\begin_inset Formula $\mathbf{u}_{Ni}$
\end_inset

 is the cell centre velocity of the cell on the other side of face 
\begin_inset Formula $f$
\end_inset

 and 
\begin_inset Formula $\lambda$
\end_inset

 is teh linear interpolation weight.
 The face area vector, 
\begin_inset Formula $\mathbf{S}_{f}$
\end_inset

 is normal to the face, has the area of the face and points from the owner
 cell to the neighbour cell.
 The cell centre velocity is reconstructed from surrounding values of 
\begin_inset Formula $U_{i}$
\end_inset

 using the standard OpenFOAM 
\family typewriter
fvc::reconstruct
\family default
:
\begin_inset Formula 
\begin{equation}
\mathbf{u}_{ci}=\left(\sum_{f\in c}\mathbf{\hat{S}}_{f}\mathbf{S}_{f}^{T}\right)^{-1}\sum_{f\in c}U_{i}\mathbf{\hat{S}}_{f}
\end{equation}

\end_inset

where the hat denotes the unit vector and the notation 
\begin_inset Formula $f\in c$
\end_inset

 means all the faces, 
\begin_inset Formula $f$
\end_inset

 of cell 
\begin_inset Formula $c$
\end_inset

.
 Note that 
\begin_inset Formula $\sum_{f\in c}\mathbf{\hat{S}}_{f}\mathbf{S}_{f}^{T}$
\end_inset

 is a tensor defined on each cell that depends only on the mesh and its
 inverse is multiplied be the vector 
\begin_inset Formula $\sum_{f\in c}U_{i}\mathbf{\hat{S}}_{f}$
\end_inset

 for each cell.
 
\end_layout

\begin_layout Subsubsection
Non-Linear Advection
\end_layout

\begin_layout Standard
The conditionally averaged Euler equations are solved in advective form
 so that they are defined where 
\begin_inset Formula $\sigma_{i}=0$
\end_inset

 and so that a bounded advection scheme can be applied to 
\begin_inset Formula $\sigma_{i}$
\end_inset

.
 The finite volume technique most naturally lends itself to solving equations
 in flux form rather than advective form and so the non-linear advection
 term of the momentum equation is calculated as:
\begin_inset Formula 
\begin{equation}
\mathbf{u}_{i}\cdot\nabla\mathbf{u}_{i}=\nabla\cdot\left(\mathbf{u}_{i}^{T}\mathbf{u}_{i}\right)-\mathbf{u}_{i}\nabla\cdot\mathbf{u}_{i}.
\end{equation}

\end_inset

This quantity is calculated at cell centres and then linearly interpolated
 onto faces.
 The calculation of 
\begin_inset Formula $\mathbf{u}_{i}\cdot\nabla\mathbf{u}_{i}$
\end_inset

 at cell centres uses Gauss's divergence theorem:
\begin_inset Formula 
\begin{equation}
\mathbf{u}_{i}\cdot\nabla\mathbf{u}_{i}\approx\frac{1}{V}\left(\sum_{f\in c}\mathbf{u}_{ai}U_{i}-\mathbf{u}_{ci}\sum_{f\in c}U_{i}\right)\label{eq:nonLinearAdvect}
\end{equation}

\end_inset

where 
\begin_inset Formula $V$
\end_inset

 is the cell volume and 
\begin_inset Formula $\mathbf{u}_{ai}$
\end_inset

 is the velocity interpolated from cell centres to faces using the OpenFOAM
 linear upwind advection scheme.
 The prognostic variable is 
\begin_inset Formula $U_{i}$
\end_inset

 so the non-linear advection term from eqn (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:nonLinearAdvect"

\end_inset

) is linearly interpolated onto faces and then the dot product is taken
 with 
\begin_inset Formula $\mathbf{S}_{f}$
\end_inset

.
\end_layout

\begin_layout Subsubsection
Pressure Gradient including the 
\begin_inset Formula $\theta_{i}$
\end_inset

 pre-factor
\end_layout

\begin_layout Standard
The pressure gradient term, 
\begin_inset Formula $c_{p}\theta_{i}\nabla\pi$
\end_inset

, needs to be calculated on faces in the normal direction to the face.
 Since we assume that we are using an orthogonal mesh this can simply be
 calculated as the difference in pressure between the cells either side
 of the face:
\begin_inset Formula 
\begin{equation}
c_{p}\theta_{i}\nabla\pi\cdot\mathbf{S}_{f}=c_{p}\theta_{fi}\nabla_{S}\pi\approx c_{p}\theta_{fi}\frac{\pi_{c}-\pi_{N}}{\delta}\ |\mathbf{S}_{f}|\label{eq:pressureGrad}
\end{equation}

\end_inset

where 
\begin_inset Formula $\theta_{fi}$
\end_inset

 is 
\begin_inset Formula $\theta_{i}$
\end_inset

 linearly interpolated from cell centres to faces, 
\begin_inset Formula $\pi_{c}$
\end_inset

 and 
\begin_inset Formula $\pi_{N}$
\end_inset

 are the values of Exner pressure in the cells either side of face 
\begin_inset Formula $f$
\end_inset

 and 
\begin_inset Formula $\delta$
\end_inset

 is the distance between the cell centres.
 The interpolation of 
\begin_inset Formula $\theta$
\end_inset

 in this term means that the discretisation uses Lorenz staggering in the
 vertical.
\end_layout

\begin_layout Subsubsection
Transfer Terms in the Momentum Equation
\end_layout

\begin_layout Standard
The transfer terms on the right hand side of the momentum equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:condMomAdv"

\end_inset

) are calculated at cell centres and so need to be linearly interpolated
 onto faces and the dot product taken with 
\begin_inset Formula $\mathbf{S}_{f}$
\end_inset

 in order to calculate the rate of change of 
\begin_inset Formula $U_{i}$
\end_inset

.
\end_layout

\begin_layout Subsubsection
Advection of 
\begin_inset Formula $\sigma_{i}\rho_{i}$
\end_inset


\begin_inset CommandInset label
LatexCommand label
name "sub:vanLeerContinuity"

\end_inset


\end_layout

\begin_layout Standard
For stability, it is essential to keep 
\begin_inset Formula $\sigma_{i}\rho_{i}$
\end_inset

 non-negative and so a bounded advection scheme is needed when solving eqn
 (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:condCont-1"

\end_inset

).
 The flux form of the conditionally averaged momentum equation predicts
 
\begin_inset Formula $\sigma_{i}\rho_{i}\mathbf{u}_{i}$
\end_inset

 which is exactly what is needed to solve the conditionally averaged continuity
 equation for 
\begin_inset Formula $\sigma_{i}\rho_{i}$
\end_inset

 and so it is not clear how to introduce upwinding when using the flux form
 momentum equation.
 The term for advection of 
\begin_inset Formula $\sigma_{i}\rho_{i}$
\end_inset

 is discretised using Guass's divergence theorem and the van-Leer advetion
 scheme from OpenFOAM:
\begin_inset Formula 
\begin{equation}
\nabla\cdot(\sigma_{i}\rho_{i}\mathbf{u}_{i})\approx\frac{1}{V}\sum_{f}(\sigma_{i}\rho_{i})_{a}U_{f}
\end{equation}

\end_inset

where 
\begin_inset Formula $(\sigma_{i}\rho_{i})_{a}$
\end_inset

 is interpolated from cell centres to faces using the OpenFOAM van-Leer
 advection scheme:
\begin_inset Formula 
\begin{equation}
(\sigma_{i}\rho_{i})_{a}=(\sigma_{i}\rho_{i})_{u}+\phi\left((\sigma_{i}\rho_{i})_{f}-(\sigma_{i}\rho_{i})_{u}\right)
\end{equation}

\end_inset

where 
\begin_inset Formula $(\sigma_{i}\rho_{i})_{u}$
\end_inset

 is the value in the upwind cell, 
\begin_inset Formula $(\sigma_{i}\rho_{i})_{f}$
\end_inset

 is the linearly interpolated value and 
\begin_inset Formula $\phi$
\end_inset

 is the van-Leer limiter function:
\begin_inset Formula 
\begin{equation}
\phi=\frac{r+|r|}{1+|r|}\ ,\ \ r=2\frac{\left(\mathbf{x}_{d}-\mathbf{x}_{u}\right)\cdot\nabla_{u}(\sigma_{i}\rho_{i})}{(\sigma_{i}\rho_{i})_{d}-(\sigma_{i}\rho_{i})_{u}}-1
\end{equation}

\end_inset

where 
\begin_inset Formula $\mathbf{x}_{u}$
\end_inset

 and 
\begin_inset Formula $\mathbf{x}_{d}$
\end_inset

 are the locations of the upwind and downwind cell centres, 
\begin_inset Formula $(\sigma_{i}\rho_{i})_{d}$
\end_inset

 and 
\begin_inset Formula $(\sigma_{i}\rho_{i})_{u}$
\end_inset

 are the values of 
\begin_inset Formula $(\sigma_{i}\rho_{i})$
\end_inset

 in the upwind and downwind cells and 
\begin_inset Formula $\nabla_{u}(\sigma_{i}\rho_{i})$
\end_inset

 is the gradient of 
\begin_inset Formula $(\sigma_{i}\rho_{i})$
\end_inset

 calculated in the upwind cell using Gauss's divergence theorem.
\end_layout

\begin_layout Subsubsection
Advection of 
\begin_inset Formula $\theta_{i}$
\end_inset


\begin_inset CommandInset label
LatexCommand label
name "sub:thetaAdvect"

\end_inset


\end_layout

\begin_layout Standard
For consistency with other equations, 
\begin_inset Formula $\theta$
\end_inset

 advection is calculated in advective form using finite volume operators
 (using Gauss's theorem):
\begin_inset Formula 
\begin{equation}
\mathbf{u}_{i}\cdot\nabla\theta_{i}\approx\frac{1}{V}\left(\sum_{f\in c}\theta_{ai}U_{i}-\theta_{i}\sum_{f\in c}U_{i}\right)\label{eq:thetaAdvect}
\end{equation}

\end_inset

where 
\begin_inset Formula $\theta_{a}$
\end_inset

 is interpolated from cell centres to faces using the OpenFOAM van-Leer
 advection scheme as for 
\begin_inset Formula $\sigma_{i}\rho_{i}$
\end_inset

.
\end_layout

\begin_layout Subsection
Time Stepping Algorithm
\end_layout

\begin_layout Standard
The conditionally averaged Euler equations are solved using Crank-Nicholson
 time-stepping with deferred correction of explicitly solved variables and
 with an outer loop so that all equations are solved twice with explicit
 variables updated for the second iteration.
 All transfer terms are solved using operator split either explicit or implicit
 first-order time-stepping.
 
\end_layout

\begin_layout Subsubsection
Initialisation and Updates for Consistency
\begin_inset CommandInset label
LatexCommand label
name "sub:consistency"

\end_inset


\end_layout

\begin_layout Standard
Transport equations are solved for 
\begin_inset Formula $U_{i}$
\end_inset

, 
\begin_inset Formula $\sigma_{i}\rho_{i}$
\end_inset

, 
\begin_inset Formula $\theta_{i}$
\end_inset

 and 
\begin_inset Formula $\pi$
\end_inset

.
 However this system is over specified because 
\begin_inset Formula $\pi$
\end_inset

 can be calculated from all of the 
\begin_inset Formula $\sigma_{i}\rho_{i}$
\end_inset

 and 
\begin_inset Formula $\theta_{i}$
\end_inset

 using the equation of state.
 To avoid over specification, only 
\begin_inset Formula $\mathbf{u}_{i}$
\end_inset

, 
\begin_inset Formula $\sigma_{i}$
\end_inset

, 
\begin_inset Formula $\theta_{i}$
\end_inset

 and 
\begin_inset Formula $\pi$
\end_inset

 are read in at initialisation.
 To avoid inconsistencies growing, 
\begin_inset Formula $\rho_{i}$
\end_inset

 is re-calculated from 
\begin_inset Formula $\theta_{i}$
\end_inset

 and 
\begin_inset Formula $\pi$
\end_inset

 at the end of every time-step from the equation of state (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:condState"

\end_inset

) and then 
\begin_inset Formula $\sigma_{i}\rho_{i}$
\end_inset

 is recalculated using the updated 
\begin_inset Formula $\rho_{i}$
\end_inset

.
\end_layout

\begin_layout Subsubsection
Solving the Continuity Equation
\begin_inset CommandInset label
LatexCommand label
name "sub:solveContinuity"

\end_inset


\end_layout

\begin_layout Standard
The first equation to be solved is the continuity equation for each 
\begin_inset Formula $\sigma_{i}\rho_{i}$
\end_inset

.
 It is solved using operator splitting, first advecting 
\begin_inset Formula $\sigma_{i}\rho_{i}$
\end_inset

 and then applying the transfer terms.
 Using a TVD advection scheme with a van-Leer limiter (section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:vanLeerContinuity"

\end_inset

), 
\begin_inset Formula $\sigma_{i}\rho_{i}$
\end_inset

 is first advected using
\begin_inset Formula 
\begin{equation}
(\sigma_{i}\rho_{i})^{\ell\ell}=(\sigma_{i}\rho_{i})^{n}-\Delta t\ \nabla\cdot\left(\left[(1-\alpha)\mathbf{u}_{i}^{n}+\alpha\mathbf{u}_{i}^{\ell}\right](\sigma_{i}\rho_{i})^{n}\right)
\end{equation}

\end_inset

where 
\begin_inset Formula $n$
\end_inset

 represents values at the old time-level, 
\begin_inset Formula $\Delta t$
\end_inset

 is the time-step and 
\begin_inset Formula $\alpha$
\end_inset

 is the off-centering parameter.
 For all the simulations presented, 
\begin_inset Formula $\alpha=1/2$
\end_inset

 is used making the time-stepping second-order accurate.
 
\begin_inset Formula $\ell$
\end_inset

 represents the most up to date value available for time level 
\begin_inset Formula $n+1$
\end_inset

 and 
\begin_inset Formula $\ell\ell$
\end_inset

 represents the new value being calculated.
 Once value 
\begin_inset Formula $\ell\ell$
\end_inset

 is calculated, it is used for values 
\begin_inset Formula $\ell$
\end_inset

 (they share the same computer memory).
 At the end of the time-step, values 
\begin_inset Formula $\ell\ell$
\end_inset

 are used as the values for time-level 
\begin_inset Formula $n+1$
\end_inset

.
\end_layout

\begin_layout Standard
The updated value of 
\begin_inset Formula $\sigma_{i}\rho_{i}$
\end_inset

 is not used in the divergence because the advection scheme is designed
 to use only the old value; it is most accurate and bounded when using the
 old value of 
\begin_inset Formula $\sigma_{i}\rho_{i}$
\end_inset

.
 
\end_layout

\begin_layout Standard
Next the mass transfer terms are calculated using all of the most up to
 date values of all variables.
 The mass transfer terms described in equations (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:diffusionTransfer"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:thetaTransfer01"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:thetaTransfer10"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:divTransfer01"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:divTransfer10"

\end_inset

) are added together and limited in order to keep 
\begin_inset Formula $\sigma_{i}\rho_{i}$
\end_inset

 positive.
 It is important to keep 
\begin_inset Formula $\sigma_{i}\rho_{i}$
\end_inset

 positive rather than non-negative because the mass transfer is divided
 by 
\begin_inset Formula $\sigma_{i}\rho_{i}$
\end_inset

 in the source terms of the momentum (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:condMomAdv"

\end_inset

) and potential temperature (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:condThetaAdv"

\end_inset

) equations.
 This is done by limiting the mass transfer:
\begin_inset Formula 
\begin{equation}
\sigma_{i}\rho_{i}S_{ij}^{\ell\ell}=\min\left((\sigma_{i}\rho_{i})^{\ell}S_{ij}^{\ell},\ ((\sigma_{i}\rho_{i})^{\ell}-\sigma_{\min}\rho_{i}^{\ell})/\Delta t\right)
\end{equation}

\end_inset

 where 
\begin_inset Formula $\sigma_{\min}=10^{-9}$
\end_inset

 is used in the simulations presented in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:results"

\end_inset

.
 Then the mass transfer is used to update 
\begin_inset Formula $\sigma_{i}\rho_{i}$
\end_inset

 explicitly with operator splitting
\begin_inset Formula 
\begin{equation}
(\sigma_{i}\rho_{i})^{\ell\ell}=(\sigma_{i}\rho_{i})^{\ell}+\Delta t\left(\sigma_{j}\rho_{j}S_{ji}^{\ell}-\sigma_{i}\rho_{i}S_{ij}^{\ell}\right).
\end{equation}

\end_inset


\end_layout

\begin_layout Subsubsection
Solving the 
\begin_inset Formula $\theta_{i}$
\end_inset

 equation
\begin_inset CommandInset label
LatexCommand label
name "sub:solveTheta"

\end_inset


\end_layout

\begin_layout Standard
After the continuity equation, the 
\begin_inset Formula $\theta_{i}$
\end_inset

 equation is solved using operator splitting; first advecting 
\begin_inset Formula $\theta_{i}$
\end_inset

 using a TVD advection scheme then applying the mass transfer terms to the
 advected 
\begin_inset Formula $\theta_{i}$
\end_inset

.
 The mass transfer terms are applied implicitly because they can be very
 large.
 The advection of 
\begin_inset Formula $\theta_{i}$
\end_inset

 is calculated as:
\begin_inset Formula 
\begin{equation}
\theta_{i}^{\ell\ell}=\theta_{i}^{n}-\Delta t\ \left((1-\alpha)\left[\nabla\cdot(\theta_{i}\mathbf{u}_{i})-\theta_{i}\nabla\cdot\mathbf{u}_{i}\right]^{n}+\alpha\left[\nabla\cdot(\theta_{i}\mathbf{u}_{i})-\theta_{i}\nabla\cdot\mathbf{u}_{i}\right]^{\ell}\right)\label{eq:thetaAdvectDt}
\end{equation}

\end_inset

where the spatial discretisation is described in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:thetaAdvect"

\end_inset

.
 The implicit addition of mass transfer terms is formulated to be specific
 for having two partitions although it would be straightforward to generalise.
 In order to derive the equations for adding the mass transfer terms to
 
\begin_inset Formula $\theta_{i}$
\end_inset

 we will write the 
\begin_inset Formula $\theta_{i}$
\end_inset

 equation as:
\begin_inset Formula 
\begin{equation}
\theta_{i}^{\ell\ell}=\theta_{i}^{\ell}+\Delta t\sum_{j\ne i}\left(\frac{\sigma_{j}\rho_{j}}{\sigma_{i}\rho_{i}}S_{ji}(\theta_{j}^{\ell\ell}-\theta_{i}^{\ell\ell})\right)\label{eq:thetaAddSource}
\end{equation}

\end_inset

where 
\begin_inset Formula $\theta_{i}^{\ell}$
\end_inset

 in eqn (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:thetaAddSource"

\end_inset

) is 
\begin_inset Formula $\theta_{i}^{\ell\ell}$
\end_inset

 from eqn (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:thetaAdvectDt"

\end_inset

).
 Note values at level 
\begin_inset Formula $\ell\ell$
\end_inset

 are on the left and right hand side making this is an implicit solution.
 For 
\begin_inset Formula $i=0,1$
\end_inset

 this can be re-arranged to give:
\begin_inset Formula 
\begin{eqnarray*}
\theta_{0}^{\ell\ell} & = & \frac{1}{1+\Delta t\ T_{10}+\Delta t\ T_{01}}\left(\left(1+\Delta t\ T_{01}\right)\theta_{0}^{\ell}+\Delta t\ T_{10}\theta_{1}^{\ell}\right)\\
\theta_{1}^{\ell\ell} & = & \frac{\theta_{1}^{\ell}+\Delta t\ T_{01}\theta_{0}^{\ell\ell}}{1+\Delta T_{01}}
\end{eqnarray*}

\end_inset

where we have used the shorthand 
\begin_inset Formula $T_{ij}=\frac{\sigma_{i}\rho_{i}}{\sigma_{j}\rho_{j}}S_{ij}$
\end_inset

.
\end_layout

\begin_layout Subsubsection
Diagnosing 
\begin_inset Formula $\sigma_{i}$
\end_inset


\begin_inset CommandInset label
LatexCommand label
name "sub:diagnoseSigma"

\end_inset


\end_layout

\begin_layout Standard
After the updates of prognostic variables 
\begin_inset Formula $(\sigma_{i}\rho_{i})$
\end_inset

 and 
\begin_inset Formula $\theta_{i}$
\end_inset

, the diagnostic variable 
\begin_inset Formula $\sigma_{i}$
\end_inset

 can be updated.
 This is almost entirely a diagnostic as it is not used in isolation from
 
\begin_inset Formula $\rho_{i}$
\end_inset

 anywhere in the equations (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:condMomAdv"

\end_inset

-
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:condState"

\end_inset

).
 However 
\begin_inset Formula $\sigma_{i}$
\end_inset

 and 
\begin_inset Formula $\rho_{i}$
\end_inset

 may be needed in closure assumptions, such as the approximation of the
 drag (below).
 Firstly, each 
\begin_inset Formula $\rho_{i}$
\end_inset

 is calculated from the equation of state:
\begin_inset Formula 
\begin{equation}
\rho_{i}=\frac{p_{0}\pi^{\frac{1-\kappa}{\kappa}}}{R\theta_{i}}=\frac{\rho\theta}{\theta_{i}}.
\end{equation}

\end_inset

Then each 
\begin_inset Formula $\sigma_{i}$
\end_inset

 can be calculated:
\begin_inset Formula 
\begin{equation}
\sigma_{i}=\frac{(\sigma_{i}\rho_{i})}{\rho_{i}}.\label{eq:diagnoseSigma}
\end{equation}

\end_inset

This calculation will guarantee 
\begin_inset Formula $\sum_{i}\sigma_{i}=1$
\end_inset

.
\end_layout

\begin_layout Subsubsection
Momentum and Continuity
\begin_inset CommandInset label
LatexCommand label
name "sub:Helmholtz"

\end_inset


\end_layout

\begin_layout Standard
The momentum and continuity equations are solved simultaneously, creating
 a Helmholtz equation for 
\begin_inset Formula $\pi$
\end_inset

.
 This is done by expressing the volume flux, 
\begin_inset Formula $U_{i}$
\end_inset

, and the mean density, 
\begin_inset Formula $\overline{\rho}$
\end_inset

, as linear functions of 
\begin_inset Formula $\pi$
\end_inset

 and substituting these into the continuity equation.
 The normal component of the volume flux, 
\begin_inset Formula $U_{i}$
\end_inset

 is expressed as a linear function of 
\begin_inset Formula $\pi$
\end_inset

 using the momentum equation:
\begin_inset Formula 
\begin{equation}
U_{i}^{n+1}=U_{i}^{\prime}-\alpha\Delta tc_{p}\theta_{fi}^{\ell}\nabla_{S}\pi^{n+1}\label{eq:volFluxFromMom}
\end{equation}

\end_inset

where the calculation of 
\begin_inset Formula $c_{p}\theta_{fi}^{\ell}\nabla_{S}\pi^{n+1}$
\end_inset

 is defined in equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:pressureGrad"

\end_inset

) and 
\begin_inset Formula $U_{i}^{\prime}$
\end_inset

 is the explicitly calculated part of the volume flux:
\begin_inset Formula 
\begin{eqnarray}
U_{i}^{\prime} & =U_{i}^{n} & -(1-\alpha)\Delta t\left(\left[\mathbf{u}_{i}\cdot\nabla\mathbf{u}_{i}+2\boldsymbol{\Omega}\times\mathbf{u}_{i}\right]\cdot\mathbf{S}_{f}+c_{p}\theta_{fi}\nabla_{S}\pi\right)^{n}\\
 &  & -\alpha\Delta t\left(\mathbf{u}_{i}\cdot\nabla\mathbf{u}_{i}+2\boldsymbol{\Omega}\times\mathbf{u}_{i}\right)^{\ell}\cdot\mathbf{S}_{f}+\Delta t\mathbf{g}\cdot\mathbf{S}_{f}.
\end{eqnarray}

\end_inset

Equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:volFluxFromMom"

\end_inset

) is multiplied by the linear interpolate of 
\begin_inset Formula $\sigma_{i}\rho_{i}$
\end_inset

 onto faces and then the sum is taken over all partitions to get the total
 mass flux:
\begin_inset Formula 
\begin{equation}
F^{n+1}=\sum_{i}(\sigma_{i}\rho_{i})_{f}U_{i}^{\prime}-\alpha\Delta tc_{p}\left(\sum_{i}(\sigma_{i}\rho_{i}\theta_{i})_{f}\right)\nabla_{S}\pi^{n+1}.\label{eq:fluxFromMom}
\end{equation}

\end_inset

This will be substituted into the divergence term of the continuity equation
 once we have described the linear representation of 
\begin_inset Formula $\rho$
\end_inset

 as a function of 
\begin_inset Formula $\pi$
\end_inset

.
\end_layout

\begin_layout Standard
In order to derive a Helmholtz equation for 
\begin_inset Formula $\pi$
\end_inset

 using the continuity equation, the density is expressed as
\begin_inset Formula 
\begin{equation}
\overline{\rho}=\Psi\pi\label{eq:usePsi}
\end{equation}

\end_inset

where 
\begin_inset Formula $\Psi$
\end_inset

 is the compressibility from the equation of state:
\begin_inset Formula 
\begin{equation}
\Psi=\left(\sum_{i}\sigma_{i}\rho_{i}\right)^{\frac{2\kappa-1}{\kappa-1}}\left(\frac{R\sum_{i}\sigma_{i}\rho_{i}\theta_{i}}{p_{0}\sum_{i}\sigma_{i}\rho_{i}}\right)^{\frac{\kappa}{\kappa-1}}.\label{eq:Psi}
\end{equation}

\end_inset

Equations (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:fluxFromMom"

\end_inset

) and (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:usePsi"

\end_inset

) are substituted into the continuity equation and Gauss's divergence theorem
 is used to calculate the divergence term:
\begin_inset Formula 
\begin{equation}
\frac{\Psi^{\ell}\pi^{n+1}-\Psi^{n}\pi^{n}}{\Delta t}++\frac{\alpha}{V}\sum_{f\in c}\left\{ \sum_{i}(\sigma_{i}\rho_{i})_{f}^{\ell}U_{i}^{\prime}-\alpha\Delta tc_{p}\left(\sum_{i}(\sigma_{i}\rho_{i}\theta_{i})_{f}^{\ell}\right)\nabla_{S}\pi^{n+1}\right\} +\frac{1-\alpha}{V}\sum_{f\in c}F^{n}=0\label{eq:Helmholtz}
\end{equation}

\end_inset

where 
\begin_inset Formula $V$
\end_inset

 is the cell volume.
 There are no source terms to this equation because the source terms transfer
 mass between partitions and the total continuity equation is summed over
 partitions.
 This is a Helmholtz equation that can be solved for 
\begin_inset Formula $\pi^{n+1}$
\end_inset

.
 Back substitutions are then made to calculate each 
\begin_inset Formula $U_{i}^{n+1}$
\end_inset

 using equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:volFluxFromMom"

\end_inset

).
 Note that 
\begin_inset Formula $\Psi^{n}$
\end_inset

 needs to be recalculated at the beginning of the time-step using updated
 variables.
 
\end_layout

\begin_layout Paragraph
Applying Drag and Mass Transfer to the Momentum Equation
\end_layout

\begin_layout Standard
The transfer terms of equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:condMomAdv"

\end_inset

) can be applied after the solution of the Helmholtz equation because they
 do not directly influence the pressure.
 They are applied implicitly, first-order with operator splitting with a
 simultaneous solution for two partitions, 
\begin_inset Formula $i$
\end_inset

 and 
\begin_inset Formula $j$
\end_inset

.
 We assume that 
\begin_inset Formula $U_{i}^{\ell}$
\end_inset

 is the volume flux predicted by the back substitution after the Helmholtz
 equation and 
\begin_inset Formula $U_{i}^{\ell\ell}$
\end_inset

 is the solution of 
\begin_inset Formula $U_{i}$
\end_inset

 after implicit application of the source terms:
\begin_inset Formula 
\begin{eqnarray}
U_{i}^{\ell\ell} & = & U_{i}^{\ell}-\Delta t\ \left(\frac{\sigma_{j}\rho_{j}}{\sigma_{i}\rho_{i}}S_{ji}+\sigma_{j}\frac{C_{D}\overline{\rho}}{r_{c}\rho_{i}}|\mathbf{u}_{i}-\mathbf{u}_{j}|\right)U_{i}^{\ell\ell}+\Delta t\left(\frac{\sigma_{j}\rho_{j}}{\sigma_{i}\rho_{i}}S_{ji}+\sigma_{j}\frac{C_{D}\overline{\rho}}{r_{c}\rho_{i}}|\mathbf{u}_{i}-\mathbf{u}_{j}|\right)U_{j}^{\ell\ell}
\end{eqnarray}

\end_inset

Using the same block implicit solution technique as was described in section
 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:solveTheta"

\end_inset

, 
\begin_inset Formula $U_{i}^{\ell\ell}$
\end_inset

 can be calculated using:
\begin_inset Formula 
\begin{eqnarray*}
U_{0}^{\ell\ell} & = & \frac{1}{1+\Delta t\ T_{10}+\Delta t\ T_{01}}\left(\left(1+\Delta t\ T_{01}\right)U_{0}^{\ell}+\Delta t\ T_{10}U_{1}^{\ell}\right)\\
U_{1}^{\ell\ell} & = & \frac{U_{1}^{\ell}+\Delta t\ T_{01}U_{0}^{\ell\ell}}{1+\Delta T_{01}}
\end{eqnarray*}

\end_inset

where for 
\begin_inset Formula $U_{i}$
\end_inset

 we use the shorthand 
\begin_inset Formula $T_{ij}=\frac{\sigma_{i}\rho_{i}}{\sigma_{j}\rho_{j}}S_{ij}+\frac{\sigma_{i}}{\rho_{j}}\frac{C_{D}\overline{\rho}}{r_{c}}|\mathbf{u}_{j}^{\ell}-\mathbf{u}_{i}^{\ell}|$
\end_inset

.
\end_layout

\begin_layout Subsubsection
Overview of the Solution Algorithm
\end_layout

\begin_layout Standard
All equations are solved twice with explicit variables updated for the second
 iteration in this order:
\end_layout

\begin_layout Enumerate
These equations are solved twice
\end_layout

\begin_deeper
\begin_layout Enumerate
Solve for 
\begin_inset Formula $\sigma_{i}\rho_{i}$
\end_inset

 as described in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:solveContinuity"

\end_inset

.
\end_layout

\begin_layout Enumerate
Solve for 
\begin_inset Formula $\theta_{i}$
\end_inset

 as described in section t
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:solveTheta"

\end_inset

.
\end_layout

\begin_layout Enumerate
Update 
\begin_inset Formula $\sigma_{i}$
\end_inset

 as described in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:diagnoseSigma"

\end_inset

.
\end_layout

\begin_layout Enumerate
Solve the momentum and continuity equations as described in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Helmholtz"

\end_inset

.
\end_layout

\end_deeper
\begin_layout Enumerate
Recalculate 
\begin_inset Formula $\rho_{i}$
\end_inset

, 
\begin_inset Formula $\sigma_{i}\rho_{i}$
\end_inset

 and 
\begin_inset Formula $\Psi$
\end_inset

 as described in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:consistency"

\end_inset

 for consistency.
\end_layout

\begin_layout Section
Results
\begin_inset CommandInset label
LatexCommand label
name "sec:results"

\end_inset


\end_layout

\begin_layout Standard
No test cases exist for numerical solutions of the conditionally averaged
 Euler equations and so variations of the rising bubble test case 
\begin_inset CommandInset citation
LatexCommand citep
key "BF02"

\end_inset

 for the non-hydrostatic Euler equations are used.
 If the conditions in each partition are initially identical, then the solution
 should evolve exactly like the single partition equations with an additional
 advected tracer for the partition fraction.
 This is therefore used as a first test of the numerical method.
 Tests are next formulated with different initial conditions in each partition
 in order to check that the solution maintains stability, boundedness and
 some conservation properties.
\end_layout

\begin_layout Standard
The dry, warm rising bubble test case of 
\begin_inset CommandInset citation
LatexCommand citet
key "BF02"

\end_inset

 consists of a two dimensional vertical slice of height 10
\begin_inset space \thinspace{}
\end_inset

km and width 20
\begin_inset space \thinspace{}
\end_inset

km initially at rest with a surface pressure of 1000
\begin_inset space \thinspace{}
\end_inset

mb, an initially uniform potential temperature of 300
\begin_inset space \space{}
\end_inset

K.
 The initial pressure is in discrete hydrostatic balance with this uniform
 potential temperature.
 A warm perturbation: 
\begin_inset Formula 
\begin{equation}
\theta^{\prime}=2\cos^{2}\frac{\pi L}{2}\ \text{K}\label{eq:thetaPerturb}
\end{equation}

\end_inset

 is added for 
\begin_inset Formula $L<1$
\end_inset

 where 
\begin_inset Formula $L=\sqrt{\left(\frac{x-x_{c}}{x_{r}}\right)^{2}+\left(\frac{z-z_{c}}{z_{r}}\right)^{2}}$
\end_inset

, 
\begin_inset Formula $x_{c}=10\ \text{km}$
\end_inset

, 
\begin_inset Formula $z_{c}=2\ \text{km}$
\end_inset

 and 
\begin_inset Formula $x_{r}=z_{r}=2\ \text{km}$
\end_inset

.
 100
\begin_inset space \thinspace{}
\end_inset

m grid spacing is used and for all simulations presented a time-step of
 2
\begin_inset space \thinspace{}
\end_inset

s is used.
 Regardless of the initial conditions and transfers between partitions,
 
\begin_inset Formula $\sigma$
\end_inset

 should remain bounded between zero and one and the potential temperature
 should remain bounded by its initial bounds.
 
\end_layout

\begin_layout Subsection
Two Identical Partitions
\end_layout

\begin_layout Standard
First the warm rising bubble of 
\begin_inset CommandInset citation
LatexCommand citet
key "BF02"

\end_inset

 is simulated with the fluid divided into two partitions with identical
 initial conditions in each partition.
 No transfers or exchanges between partitions are used.
 Two different initial partition fractions are used as shown in figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:identicalParts"

\end_inset

.
 These should not influence the evolution of other variables.
 The two initial 
\begin_inset Formula $\sigma$
\end_inset

 distributions are
\begin_inset Formula 
\begin{eqnarray*}
\sigma & = & \begin{cases}
1 & \ \text{if}\ \biggl|\mathbf{x}-\left(\begin{array}{c}
0\\
2
\end{array}\right)\text{km}\biggr|<2\ \text{km}\\
0 & \ \text{otherwise},
\end{cases}\\
\sigma & = & \begin{cases}
1 & \ \text{if}\ \biggl|\mathbf{x}-\left(\begin{array}{c}
2\\
5
\end{array}\right)\text{km}\biggr|<2\ \text{km}\\
0 & \ \text{otherwise}.
\end{cases}
\end{eqnarray*}

\end_inset

The distributions of 
\begin_inset Formula $\sigma$
\end_inset

, 
\begin_inset Formula $\theta_{i}$
\end_inset

 and the velocity in each partition are shown in figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:identicalParts"

\end_inset

 after 1000
\begin_inset space \thinspace{}
\end_inset

s.
 
\begin_inset Formula $\theta$
\end_inset

 and the velocity have remained identical in each partition and 
\begin_inset Formula $\sigma$
\end_inset

 has been advected by the flow without any undershoots or overshoots.
 The presence of the 
\begin_inset Formula $\sigma$
\end_inset

 field does not influence the evolution of the velocity or potential temperature
 in each partition.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell multicolumn="1" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Initial 
\begin_inset Formula $\sigma$
\end_inset

 (shaded) and initial 
\begin_inset Formula $\theta_{i}$
\end_inset

 (contoured every 0.2
\begin_inset space \thinspace{}
\end_inset

K)
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/hilary/OpenFOAM/hilary-dev/run/hilary/warmBubble/partitioned_identical/sigmaBubble/0/sigmaTheta.pdf
	width 48line%

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/hilary/OpenFOAM/hilary-dev/run/hilary/warmBubble/partitioned_identical/sigmaBubble2/0/sigmaTheta.pdf
	width 48line%

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\sigma$
\end_inset

 scale 
\begin_inset Graphics
	filename /home/hilary/OpenFOAM/hilary-dev/run/hilary/warmBubble/partitioned_identical/sigmaBubble/legends/sigmaTheta_buoyant.sigma.eps
	width 75line%

\end_inset


\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\theta$
\end_inset

 scale 
\begin_inset Graphics
	filename /home/hilary/OpenFOAM/hilary-dev/run/hilary/warmBubble/partitioned_identical/sigmaBubble/legends/sigmaTheta_buoyant.theta.eps
	width 75line%

\end_inset


\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\sigma$
\end_inset

 , 
\begin_inset Formula $\theta_{i}$
\end_inset

 and 
\begin_inset Formula $\mathbf{u}_{i}$
\end_inset

 after 1000
\begin_inset space \thinspace{}
\end_inset

s (results identical in each partition)
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/hilary/OpenFOAM/hilary-dev/run/hilary/warmBubble/partitioned_identical/sigmaBubble/1000/sigmaTheta.pdf
	width 48line%

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/hilary/OpenFOAM/hilary-dev/run/hilary/warmBubble/partitioned_identical/sigmaBubble2/1000/sigmaTheta.pdf
	width 48line%

\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Initial partition fraction (
\begin_inset Formula $\sigma$
\end_inset

) for simulations with identical properties in each partition and properties
 after 1000
\begin_inset space \thinspace{}
\end_inset

s.
 The vectors and contours for 
\begin_inset Formula $\theta_{i}$
\end_inset

 and 
\begin_inset Formula $\mathbf{u}_{i}$
\end_inset

 for each partition are identical.
 
\begin_inset CommandInset label
LatexCommand label
name "fig:identicalParts"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
afterpage{
\backslash
clearpage}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The stability of the model is demonstrated by plotting the total energy
 and the different types of energy in figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:erergy1part"

\end_inset

.
 The left had side shows normalised kinetic, potential, internal and total
 energy changes for the model with a single partition using van-Leer advection.
 The various energies are defined in cells as:
\begin_inset Formula 
\begin{eqnarray*}
\text{KE} & = & \frac{1}{2}\sum_{i}\sigma_{i}\rho_{i}|\mathbf{u}_{ci}|^{2}\\
\text{PE} & = & -\mathbf{g}\cdot\mathbf{x}\sum_{i}\sigma_{i}\rho_{i}\\
\text{IE} & = & c_{v}\pi\sum_{i}\sigma_{i}\rho_{i}\theta_{i}\\
E & = & \text{KE}+\text{PE}+\text{IE}
\end{eqnarray*}

\end_inset

and totals are calculated by integrating over space.
 The normalisation and calculating of changes is calculated for energy XE
 as:
\begin_inset Formula 
\begin{equation}
\widetilde{\text{\text{XE}}}=\frac{\text{\text{XE}}-\text{\text{XE}}(t=0)}{E(t=0)}.
\end{equation}

\end_inset

The dashed lines in figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:erergy1part"

\end_inset

 show negative values and the solid lines show positive values.
 In the first part of the simulation, the single partition simulation shows
 internal and potential energy oscillating in phase with each other, showing
 conservative transfers between internal and potential energy.
 Throughout the simulation the kinetic energy increases and the rising bubble
 accelerates.
 Throughout the simulation, the total energy decreases slightly and monotonicall
y due to stable, dissipative nature of the model.
 Part of this dissipation is due to the dissipative advection of velocity
 and potential temperature.
 A simulation is run using centred, linear differencing for advection and
 the total energy is shown in the right hand of figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:erergy1part"

\end_inset

.
 This simulation looses energy less slowly and the energy loss is no longer
 monotonic.
 The results of this simulation are noisy but stable with overshoots and
 undershoots of temperature.
\end_layout

\begin_layout Standard
The total energy for the the simulations with two identical partitions and
 different distributions of 
\begin_inset Formula $\sigma$
\end_inset

 are shown in figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:erergy1part"

\end_inset

.
 This confirms that the presence of more than one identical partition does
 not influence the energy conservation.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1 partition, van-Leer advetion
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Total energy for various simulations
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/hilary/OpenFOAM/hilary-dev/run/hilary/warmBubble/advective/advective_vanLeer/plots/energy.eps
	width 48line%

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/hilary/OpenFOAM/hilary-dev/run/hilary/warmBubble/plots/energy1part.eps
	width 48line%

\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Normalised changes in kinetic, potential, internal and total energy for
 the rising bubble test case for the model with a single partition and the
 normalised total energy change for models with one partition with different
 advection schemes and for a model with two identical partitions.
 Solid lines show positive changes and dashed lines show negative changes.
\begin_inset CommandInset label
LatexCommand label
name "fig:erergy1part"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Different Initial Conditions in each Partition
\end_layout

\begin_layout Standard
Once each partition can have different properties, the behaviour of the
 solutions changes and it can be more difficult to find stable solutions.
 The total solution is close to divergence free because compressibility
 is small in this low Mach number case.
 However with only one pressure to control the divergence in two partitions,
 the divergence in each partition can be large.
 We will therefore initialise the equation to force different velocities
 and hence divergence in each partition.
 
\end_layout

\begin_layout Subsubsection
Warm air in a diffuse partition 1
\end_layout

\begin_layout Standard
In order to simulate two fluids with different properties occupying the
 same location, we set 
\begin_inset Formula $\sigma_{1}=\frac{1}{2}$
\end_inset

 in a circle with warm air only in partition 1 and initially stationary
 flow in each partition:
\begin_inset Formula 
\begin{eqnarray*}
\sigma_{1} & = & \begin{cases}
\frac{1}{2} & \ \text{if}\ \biggl|\mathbf{x}-\left(\begin{array}{c}
0\\
2
\end{array}\right)\text{km}\biggr|<2\ \text{km}\\
0 & \ \text{otherwise},
\end{cases},\ \sigma_{0}=1-\sigma_{1}\\
\theta_{0} & = & 300\ \text{K}\\
\theta_{1} & = & 300\ \text{K}\ +\theta^{\prime}.
\end{eqnarray*}

\end_inset

Initially we assume no mass flux and no drag between partitions.
 The initial conditions for 
\begin_inset Formula $\sigma_{1}$
\end_inset

 and 
\begin_inset Formula $\theta_{1}$
\end_inset

 are shown in figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:diffuse1_noDrag"

\end_inset

.
 
\begin_inset Formula $\theta_{0}$
\end_inset

 remains identically 300
\begin_inset space \thinspace{}
\end_inset

K throughout the simulation and 
\begin_inset Formula $\sigma_{0}=1-\sigma_{0}$
\end_inset

 throughout.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Initial conditions
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $t=100\ \text{s}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/hilary/OpenFOAM/hilary-dev/run/hilary/warmBubble/partitioned_05/noTransfer/0/sigmaTheta.pdf
	width 48line%

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/hilary/OpenFOAM/hilary-dev/run/hilary/warmBubble/partitioned_05/noTransfer/100/sigmaTheta.pdf
	width 48line%

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\sigma$
\end_inset

 scale 
\begin_inset Graphics
	filename /home/hilary/OpenFOAM/hilary-dev/run/hilary/warmBubble/partitioned_identical/sigmaBubble/legends/sigmaTheta_buoyant.sigma.eps
	width 75line%

\end_inset


\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\theta$
\end_inset

 scale 
\begin_inset Graphics
	filename /home/hilary/OpenFOAM/hilary-dev/run/hilary/warmBubble/partitioned_identical/sigmaBubble/legends/sigmaTheta_buoyant.theta.eps
	width 75line%

\end_inset


\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $t=200\ \text{s}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $t=290\ \text{s}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/hilary/OpenFOAM/hilary-dev/run/hilary/warmBubble/partitioned_05/noTransfer/200/sigmaTheta.pdf
	width 48line%

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/hilary/OpenFOAM/hilary-dev/run/hilary/warmBubble/partitioned_05/noTransfer/290/sigmaTheta.pdf
	width 48line%

\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Initial conditions and results of a simulation with a buoyant perturbation
 in partition 1.
 
\begin_inset Formula $\sigma_{1}$
\end_inset

 is shaded, 
\begin_inset Formula $\theta_{1}$
\end_inset

 is contoured every 0.2
\begin_inset space \thinspace{}
\end_inset

K, 
\begin_inset Formula $\mathbf{u}_{0}$
\end_inset

 is shown by black vectors and 
\begin_inset Formula $\mathbf{u}_{1}$
\end_inset

 by blue vectors.
 
\begin_inset CommandInset label
LatexCommand label
name "fig:diffuse1_noDrag"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
The buoyancy perturbation in partition one makes partition one rise which
 raises the pressure above the bubble which forces partition zero downwards.
 Consequently total divergence is controlled but the divergence in each
 partition can be large and hence the velocities become large.
 The advection scheme is only bounded for Courant numbers less than 0.5.
 Shortly before 300
\begin_inset space \thinspace{}
\end_inset

s, Courant numbers in partition one have become larger than 0.5 and oscillations
 grow in 
\begin_inset Formula $\sigma_{1}$
\end_inset

.
 The solution diverges at 
\begin_inset Formula $t=290\ \text{s}$
\end_inset

.
 A stable simulation could be maintained for longer by using a smaller time-step
 or by treating advection implicitly but we should first consider the physical
 meaning of this test case.
 The situation with 
\begin_inset Formula $\sigma_{1}\sim\frac{1}{2}$
\end_inset

 implies that both partitions are present at scales down to the grid-scale
 which implies that there will be a large surface area between the two partition
s and so they are likely to exchange mass and momentum.
 We therefore consider coupling the two partitions using mass exchanges
 and drag between the partitions.
 
\end_layout

\begin_layout Standard
We will first add drag between the partitions but no mass transfer.
 The drag takes the form described in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:drag"

\end_inset

 with length scales 
\begin_inset Formula $r_{\min}=1\ \text{m}$
\end_inset

 (a minimum is needed to avoid division by zero) and 
\begin_inset Formula $r_{\max}=2000\ \text{m}$
\end_inset

.
 A large value of 
\begin_inset Formula $r_{\max}$
\end_inset

 has been chosen so that the drag is low where neither 
\begin_inset Formula $\sigma$
\end_inset

 is vanishing which allows some variation of velocity between partitions.
 
\begin_inset Formula $\sigma_{1}$
\end_inset

, 
\begin_inset Formula $\theta_{1}$
\end_inset

, 
\begin_inset Formula $\mathbf{u}_{0}$
\end_inset

 and 
\begin_inset Formula $\mathbf{u}_{1}$
\end_inset

 at 
\begin_inset Formula $t=1000\ \text{s}$
\end_inset

 are shown in figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:diffuse1_dragDiffuse"

\end_inset

.
 
\begin_inset Formula $\theta_{0}$
\end_inset

 remains identically 300
\begin_inset space \thinspace{}
\end_inset

K throughout.
 The drag has stabilised the solution and the two partition velocities (in
 black and blue) are not identical.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
with drag 
\begin_inset Formula $t=1000\ \text{s}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Diffusion between partitions of 
\begin_inset Formula $K_{\sigma}=200\ \text{m}^{2}\text{s}^{-1}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/hilary/OpenFOAM/hilary-dev/run/hilary/warmBubble/partitioned_05/loDrag/1000/sigmaTheta.pdf
	width 48line%

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/hilary/OpenFOAM/hilary-dev/run/hilary/warmBubble/partitioned_05/loDiffusion/1000/sigmaTheta.pdf
	width 48line%

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/hilary/OpenFOAM/hilary-dev/run/hilary/warmBubble/plots/energy_05.eps
	width 48line%

\end_inset


\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Results of simulations with a buoyant perturbation in partition 1.
 
\begin_inset Formula $\sigma_{1}$
\end_inset

 is shaded, 
\begin_inset Formula $\theta_{1}$
\end_inset

 and 
\begin_inset Formula $\theta_{2}$
\end_inset

 are contoured every 0.2
\begin_inset space \thinspace{}
\end_inset

K, 
\begin_inset Formula $\mathbf{u}_{0}$
\end_inset

 is shown by black vectors and 
\begin_inset Formula $\mathbf{u}_{1}$
\end_inset

 by blue vectors.
 Initially 
\begin_inset Formula $\sigma=\frac{1}{2}$
\end_inset

 in circle near the ground.
 
\begin_inset CommandInset label
LatexCommand label
name "fig:diffuse1_dragDiffuse"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Another technique to couple the partitions is to add diffusion to them so
 that they exchange mass as described in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:diffuseSigma"

\end_inset

.
 This is similar to convective detrainment.
 The results of a simulation with diffusion between the partitions with
 a coefficient 
\begin_inset Formula $K_{\sigma}=200\ \text{m}^{2}\text{s}^{-1}$
\end_inset

 is shown in figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:diffuse1_dragDiffuse"

\end_inset

.
 The diffusion is treated explicitly and this diffusion coefficient is well
 below the stability limit.
 Once mass is transferred then temperature and momentum are transferred
 too so the temperature in partition 1 no longer remains 300
\begin_inset space \thinspace{}
\end_inset

K.
 This diffusion stabilises the solution and the results are quite different
 from the result with drag between the partitions.
 
\end_layout

\begin_layout Standard
The total energy changes for all of the simulations with warm air in a diffuse
 partition 1 are shown in the bottom right of figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:diffuse1_dragDiffuse"

\end_inset

.
 The energy diverges for the unstable case with no transfers.
 The simulation with the low diffusion coefficient (
\begin_inset Formula $K_{\sigma}=200\ \text{m}^{2}\text{s}^{-1}$
\end_inset

) stabilises the model after around 350
\begin_inset space \thinspace{}
\end_inset

s but this looks unreliable as energy increases before this point.
 A larger diffusion coefficient, (
\begin_inset Formula $K_{\sigma}=800\ \text{m}^{2}\text{s}^{-1}$
\end_inset

) stabilises the model more effectively.
 (The stability limit is 
\begin_inset Formula $K_{\sigma}\Delta t/\Delta x^{2}<\frac{1}{2}$
\end_inset

 so for 
\begin_inset Formula $\Delta t=2\text{s}$
\end_inset

 and 
\begin_inset Formula $\Delta x=100\text{m}$
\end_inset

 the stability limit is 
\begin_inset Formula $K_{\sigma}=2500\ \text{m}^{2}\text{s}^{-1}$
\end_inset

.) The simulation is also stabilised by using drag between the partitions.
 The low drag coefficient of 
\begin_inset Formula $C_{D}=1$
\end_inset

, 
\begin_inset Formula $r_{\min}=1\ \text{m}$
\end_inset

 and 
\begin_inset Formula $r_{\max}=2000\ \text{m}$
\end_inset

 leads more rapid energy loss than any of the other effective stabilisation
 methods.
 The high diffusion coefficient (
\begin_inset Formula $C_{D}=10^{6}$
\end_inset

) is used to check the stability of the implicit treatment of drag.
 
\end_layout

\begin_layout Subsection
Transfers Between Partitions
\end_layout

\begin_layout Standard
For the conditionally averaged equations to be useful for convection, there
 must be transfer terms between the partitions based on convection.
 These have a similar role to the closure approximations used by conventional
 convection schemes and could take the same form.
 Alternatively they could depend on approximations of sub-grid scale variability.
 Here we test mass transfers between partitions based on buoyancy anomalies,
 based on horizontal divergence and based on partition divergence.
 We are not assuming any sub-grid scale variability so these are not representat
ive of convection but we need to demonstrate that the numerical method is
 stable in the presence of large transfers between partitions and we choose
 transfer terms that lead to having the warm rising air in partition one
 and the stable and descending air in partition zero.
\end_layout

\begin_layout Subsubsection
Transfers based on buoyancy perturbations
\end_layout

\begin_layout Standard
We test the numerical solution using the mass transfer terms associated
 with buoyancy perturbations from eqns (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:thetaTransfer01"

\end_inset

,
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:thetaTransfer10"

\end_inset

).
 To test that warm air is transferred from partition zero to partition one,
 we initialise the simulation with 
\begin_inset Formula $\sigma_{0}=0$
\end_inset

 everywhere and the warm perturbation in partition zero only.
 Whenever mass is transferred into partition one it takes its properties
 with it so the solution should remain identical to the solution with identical
 initial conditions in each partition.
 The solutions for 
\begin_inset Formula $\sigma_{1}$
\end_inset

, 
\begin_inset Formula $\theta_{0,1}$
\end_inset

 and 
\begin_inset Formula $\mathbf{u}_{0,1}$
\end_inset

 after 1000
\begin_inset space \thinspace{}
\end_inset

s are shown in figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:massTransfer"

\end_inset

 using diffusivity 
\begin_inset Formula $K_{\theta}=10^{6}\ \text{m}^{2}\text{s}^{-1}$
\end_inset

.
 Diffusion between partitions of 
\begin_inset Formula $K_{\sigma}=200\ \text{m}^{2}\text{s}^{-1}$
\end_inset

 is also used to maintain a smooth solution.
 Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:massTransfer"

\end_inset

 confirms that 
\begin_inset Formula $\theta$
\end_inset

 and 
\begin_inset Formula $\mathbf{u}$
\end_inset

 are similar in each partition and also similar to the solutions in figure
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:identicalParts"

\end_inset

.
 It also shows that fluid has been transferred to partition one where there
 are warm anomalies.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Mass transfer based on 
\begin_inset Formula $\nabla^{2}\theta$
\end_inset

 with 
\begin_inset Formula $K_{\theta}=10^{6}\ \text{m}^{2}\text{s}^{-1}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Mass transfer based on 
\begin_inset Formula $\nabla_{h}\cdot\mathbf{u}$
\end_inset

 and 
\begin_inset Formula $\mathbf{u}\cdot\mathbf{g}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/hilary/OpenFOAM/hilary-dev/run/hilary/warmBubble/partitioned_withMassTransfer/partitioned_withMassTransferTheta/1000/sigmaTheta.pdf
	width 48line%

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/hilary/OpenFOAM/hilary-dev/run/hilary/warmBubble/partitioned_withMassTransfer/partitioned_withMassTransferDiv/1000/sigmaTheta.pdf
	width 48line%

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Also with partition divergence transfer
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Also with partition divergence transfer
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/hilary/OpenFOAM/hilary-dev/run/hilary/warmBubble/partitioned_withMassTransfer/partitioned_withMassTransferThetaDiv/1000/sigmaTheta.pdf
	width 48line%

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/hilary/OpenFOAM/hilary-dev/run/hilary/warmBubble/partitioned_withMassTransfer/partitioned_withMassTransferDivDiv/1000/sigmaTheta.pdf
	width 48line%

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/hilary/OpenFOAM/hilary-dev/run/hilary/warmBubble/plots/energy_transfers.eps
	width 70line%

\end_inset


\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Rising bubble solutions of 
\begin_inset Formula $\sigma_{1}$
\end_inset

, 
\begin_inset Formula $\theta_{0,1}$
\end_inset

 and 
\begin_inset Formula $\mathbf{u}_{0,1}$
\end_inset

 after 1000
\begin_inset space \thinspace{}
\end_inset

s with mass transfers based on (a) 
\begin_inset Formula $K_{\theta}\nabla^{2}\theta/\theta$
\end_inset

 and (b) based on 
\begin_inset Formula $\nabla_{h}\cdot\mathbf{u}$
\end_inset

 and 
\begin_inset Formula $\mathbf{u}\cdot\mathbf{g}$
\end_inset

.
 Both use 
\begin_inset Formula $K_{\sigma}=200\ \text{m}^{2}\text{s}^{-1}$
\end_inset

.
 
\begin_inset CommandInset label
LatexCommand label
name "fig:massTransfer"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Transfers Based on Horizontal Divergence and Vertical Velocity
\end_layout

\begin_layout Standard
The mass transfer term associated with horizontal divergence and vertical
 velocity from eqns (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:divTransfer01"

\end_inset

,
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:divTransfer10"

\end_inset

) is combined with diffusion between partitions of 
\begin_inset Formula $K_{\sigma}=200\ \text{m}^{2}\text{s}^{-1}$
\end_inset

.
 The solutions for 
\begin_inset Formula $\sigma_{1}$
\end_inset

, 
\begin_inset Formula $\theta_{0,1}$
\end_inset

 and 
\begin_inset Formula $\mathbf{u}_{0,1}$
\end_inset

 after 1000
\begin_inset space \thinspace{}
\end_inset

s are shown in figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:massTransfer"

\end_inset

 on the right hand side.
 Again, since partition 1 is initially empty, its initial properties do
 not influence the final solution.
 Instead, properties are transferred to partition 1 with mass and the two
 partitions evolve in the same way (once there is mass in partition 1) and
 the solutions are the same as for the case with the two partitions are
 initialised to be the same.
 Using transfer based on horizontal divergence and vertical velocity, partition
 1 contains mass behind the convection because this is where horizontal
 divergence has been negative and no descent has occurred so the fluid remains
 in partition 1 (until it starts diverging and descending).
 
\end_layout

\begin_layout Subsubsection
Other Transfer Terms
\end_layout

\begin_layout Standard
There are of course numerous other possibilities for transfer terms, different
 combinations of the above terms and different diffusivities for the transfer
 based on 
\begin_inset Formula $\nabla^{2}\theta$
\end_inset

.
 However conditional averaging is necessary for representing convection
 if convection is sub-grid scale.
 Therefore transfer terms should depend on the sub-grid variability of buoyancy
 and other factors that drive convection.
 These transfer terms are not developed here.
 This work is restricted to cases where as assume no sub-grid variability
 other than that associated with the two partitions.
 
\end_layout

\begin_layout Section
Conclusions and Further Work
\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "numerics"
options "abbrvnat"

\end_inset


\end_layout

\end_body
\end_document
